extends ../layouts/default

block main
  h1= playlist.title
  - if (req.isAuthenticated())
    form(action="/playlists/"+playlist.id, method="post", onsubmit="return confirm('Are you sure?')")
      input(type='hidden', name='_csrf', value="#{csrf_token}")
      a.btn.btn-default(href='/playlists/'+playlist._id+'/edit', title="edit") Edit
      | &nbsp;
      input(type="hidden", name="_method", value="DELETE")
      button.btn.btn-danger(type="submit") Delete

block content
  .row
    .col-sm-8
      p=playlist.description
      
    .col-sm-4
      .meta
        - if (playlist.user)
          - var name = playlist.user.name ? playlist.user.name : playlist.user.username
          span Author :&nbsp;
            a(href="/users/"+playlist.user._id)= name
        &nbsp;&nbsp;&nbsp;
        span.muted= formatDate(playlist.createdAt, "%b %d, %Y at %I:%M %p")

  .row
    .col-sm-8
      .video-player-container
        .video-player#player

    .col-sm-4
      - if (req.isAuthenticated())
        form.yt-search
          input(type='text', name='yt-search', value="", placeholder="Keyword")
          button.btn.btn-default(type="Search")
            span.glyphicon.glyphicon-search
            
        .results-list
      - else
        div Login to add video from Youtube

  .row
    .col-sm-12
      h3 Playlist
      
      .videos-list
        - each video, index in playlist.videos
          include ../videos/video

  include ../videos/form
  
  script.
    var tag = document.createElement('script');

    tag.src = "https://www.youtube.com/iframe_api"; 
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
    
    var player;
    var isVideoDragging = false;
    var isVideoMouseDown = false;
    var vIndex = 0;
    function onYouTubeIframeAPIReady() {
      var $firstVideo = $('.videos-list .video[vid=0]')
      if ($firstVideo) {
        player = new YT.Player('player', {
          height: '372',
          width: '610',
          videoId: $firstVideo.attr("data-yt-id"),
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }
    }

    function onPlayerReady(event) {
      // event.target.playVideo();
      $(document).ready(function() {
        $('.videos-list .video[data-slick-index=0]').addClass('active');
        // Disable click event.
        $('.videos-list').delegate('.video a', 'click', function(e) {
          e.preventDefault();
        });
        $('.videos-list').delegate('.video a', 'mousedown', function(e) {
          e.preventDefault();
          isVideoMouseDown = true;
        });
        $('.videos-list').delegate('.video a', 'mousemove', function(e) {
          if (isVideoMouseDown) {
            isVideoDragging = true;
          }
        });
        $('.videos-list').delegate('.video a', 'mouseup', function(e) {
          if (isVideoMouseDown && !isVideoDragging) {
            e.preventDefault();
            player.loadVideoById($(this).parent().data("ytId"));
            vIndex = $(this).parent().data('slickIndex');
            console.log('Now Playing - ' + vIndex);
            $('.videos-list').slick('slickGoTo', parseInt(vIndex, 10));
            $('.video').removeClass('active');
            $(this).parent().addClass('active');
          }
          // reset flag
          isVideoMouseDown = false;
          isVideoDragging = false;
        });
        $('.videos-list').delegate('.video button', 'click', function(e) {
          e.preventDefault();
          var $this = $(this);
          var $form = $this.parent('form');
          $.post($form.attr('action'), $form.serialize(), function(data) {
            alert(data);
            console.log($this.closest('.video').attr('data-slick-index'));
            $('.videos-list').slick('slickRemove', $this.closest('.video').attr('data-slick-index'));
          })
          .fail(function(jqXHR, textStatus) {
            alert(jqXHR.responseText);
          });
        });
      });
    }
    
    function onPlayerStateChange(event) {
      if (event.data == YT.PlayerState.ENDED) {
        var next = $('.videos-list .video[data-slick-index=' + vIndex + ']').next().attr('data-slick-index');
        vIndex = parseInt(next, 10) % $('.videos-list')[0].slick.slideCount;
        player.loadVideoById($('.videos-list .video[data-slick-index=' + vIndex + ']').data("ytId"));
        console.log('Now Playing - ' + vIndex);
        $('.videos-list').slick('slickGoTo', parseInt(vIndex, 10));
        $('.video').removeClass('active');
        $('.videos-list .video[data-slick-index=' + vIndex + ']').addClass('active');
      }
    }